name: Build Release Assets

on:
  release:
    types: [created]

jobs:
  # Job 1: Build only (no write permissions, no tokens)
  build:
    name: Build files
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            platform: macos
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'

      - uses: julia-actions/cache@v1
      - name: Install AppBundler
        run: julia -e 'using Pkg; Pkg.add("https://github.com/PeaceFounder/AppBundler.jl/tree/ci-refactor")'

      - name: Build installer
        run: |
          mkdir -p build
          julia -e 'using AppBundler; using Pkg.BinaryPlatforms: MacOS; qmlapp = joinpath(dirname(dirname(pathof(AppBundler))), "examples/qmlapp"); AppBundler.build_app(MacOS(:x86_64), qmlapp, "build/qmlapp-${{ matrix.platform }}.dmg", precompile=false)'

      # Store the built file as an artifact (not uploaded to release yet)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: qmlapp-${{ matrix.platform }}.tar.gz
          retention-days: 1

  # Job 2: Upload all artifacts in a single job
  upload:
    name: Upload to release
    runs-on: ubuntu-latest
    needs: build  # Waits for build jobs to complete
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload all artifacts to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Uploading to release: ${{ github.event.release.tag_name }}"
          
          # Find and upload all files in artifacts directory
          find artifacts/ -type f | while read -r file; do
            echo "Uploading: $file"
            gh release upload "${{ github.event.release.tag_name }}" "$file"
          done
          
          echo "All artifacts uploaded successfully!"
