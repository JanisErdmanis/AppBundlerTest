name: Build Release Assets

on:
  release:
    types: [created]

jobs:
  # Job 1: Build only (no write permissions, no tokens)
  build:
    name: Build files
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create and compress text file
        run: |
          mkdir -p build
          echo "Hello from ${{ matrix.platform }}!" > build/hello-${{ matrix.platform }}.txt
          echo "Built on: $(date)" >> build/hello-${{ matrix.platform }}.txt
          echo "OS: ${{ matrix.os }}" >> build/hello-${{ matrix.platform }}.txt
          
          # Create tar.gz archive
          tar -czf hello-${{ matrix.platform }}.tar.gz -C build hello-${{ matrix.platform }}.txt

      # Store the built file as an artifact (not uploaded to release yet)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: hello-${{ matrix.platform }}.tar.gz
          retention-days: 1

  # Job 2: Upload only (has write permissions, downloads verified artifacts)
  upload:
    name: Upload to release
    runs-on: ubuntu-latest
    needs: build  # Waits for build jobs to complete
    strategy:
      matrix:
        platform: [linux, macos]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: ./artifacts

      - name: Verify artifact exists
        run: |
          ls -la artifacts/
          if [[ ! -f "artifacts/hello-${{ matrix.platform }}.tar.gz" ]]; then
            echo "Expected artifact not found!"
            exit 1
          fi

      - name: Upload to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Uploading to release: ${{ github.event.release.tag_name }}"
          gh release upload "${{ github.event.release.tag_name }}" "artifacts/hello-${{ matrix.platform }}.tar.gz"
